---
import NavBar from "@/components/navigation/NavBar.vue";
import Footer from "@/components/sections/Footer.astro";
import "@/styles/global.css";
import { useTranslations } from '@/i18n/utils';

interface Props {
  title: string;
  description?: string;
  lang?: string;
  keywords?: string;
  ogImage?: string;
  twitterImage?: string;
}

const { title, description, lang = "en", keywords, ogImage, twitterImage } = Astro.props;

const t = useTranslations(lang);
const defaultOgImageUrl = "https://marctonimas.com/og-image.jpg";
const siteUrl = Astro.site ? Astro.site.toString().replace(/\/$/, "") : "https://marctonimas.com";

const webSiteSchema = {
  "@context": "https://schema.org",
  "@type": "WebSite",
  name: title,
  url: siteUrl,
  description: description,
};

const personSchema = {
  "@context": "https://schema.org",
  "@type": "Person",
  name: t("person.name"),
  url: t("person.url"), 
  jobTitle: t("person.jobTitle"),
  sameAs: [
    t("person.sameAs.linkedin"),
    t("person.sameAs.github")
  ].filter(url => url && !url.startsWith('person.sameAs.')) // Filter out if key not found
};
---

<!doctype html>
<html lang={lang} class="scroll-smooth">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>{title}</title>
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <!-- <meta name="generator" content={Astro.generator} /> -->
    <meta name="description" content={description} />
    {keywords && <meta name="keywords" content={keywords} />}
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:site" content="@mtmarctoni" />
    <meta name="twitter:title" content={title} />
    <meta name="twitter:description" content={description} />
    <meta name="twitter:image" content={twitterImage || defaultOgImageUrl} />
    <meta name="twitter:creator" content="@mtmarctoni" />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:image" content={ogImage || defaultOgImageUrl} />
    <meta property="og:url" content="https://marctonimas.com" />
    <meta property="og:type" content="website" />
    <meta property="og:site_name" content="Marc Antoni Mas" />

    <script type="application/ld+json" set:html={JSON.stringify(webSiteSchema)} />
    <script type="application/ld+json" set:html={JSON.stringify(personSchema)} />

    <script is:inline>
      // Initialize theme based on user preference or system setting
      const getThemePreference = () => {
        if (
          typeof localStorage !== "undefined" &&
          localStorage.getItem("theme")
        ) {
          return localStorage.getItem("theme");
        }
        return window.matchMedia("(prefers-color-scheme: dark)").matches
          ? "dark"
          : "light";
      };

      const theme = getThemePreference();

      document.documentElement.classList.toggle("dark", theme === "dark");

      if (typeof localStorage !== "undefined") {
        localStorage.setItem("theme", theme);
      }
    </script>
  </head>
  <body class="bg-bg text-fg transition-colors duration-300">
    <NavBar client:load client:only="header" />
    <main class="min-w-screen">
      <slot />
    </main>
    <Footer />
  </body>
</html>
